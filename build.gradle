buildscript {
    ext.kotlin_version = '1.1.4-3'
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'kotlin'
apply plugin: 'scala'

springBoot {
    executable = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

idea.module.outputDir = compileJava.destinationDir
idea.module.inheritOutputDirs = true
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources


jar {
    baseName = 'shuzobot'
    version =  '0.2.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    // spring security
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')

    // '/health' エンドポイントなどを自動で追加するライブラリです。
    // https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html
    compile('org.springframework.boot:spring-boot-starter-actuator')

    // use web socket
    compile("me.ramswaroop.jbot:jbot:3.0.2")

    // Spring Boot-Doma連携用
    compile('org.seasar.doma.boot:doma-spring-boot-starter:1.1.1')
    compile('mysql:mysql-connector-java:5.1.38')

    // flyway
    compile('org.flywaydb:flyway-core:4.2.0')

    // 形態素解析
    compile('com.atilika.kuromoji:kuromoji-ipadic:0.9.0')


    compile('org.springframework.boot:spring-boot-starter-tomcat')

    // UnitTest
    testCompile('org.springframework.boot:spring-boot-test')
    testCompile('com.github.sbrannen:spring-test-junit5:1.0.0')
    testCompile('org.mockito:mockito-core:2.+')
    testCompile('org.scala-lang:scala-library:2.12.3')
    testCompile('org.scalatest:scalatest_2.12:3.0.1')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

ext['thymeleaf.version'] = '3.0.7.RELEASE'
ext['thymeleaf-layout-dialect.version'] = '2.2.2'
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
